"""upgrade table users

Revision ID: 4cec94c8f074
Revises: 653c34d4b8f2
Create Date: 2025-06-28 13:21:49.880576

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4cec94c8f074'
down_revision: Union[str, None] = '653c34d4b8f2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Feedbacks')
    op.alter_column('Restaurants', 'name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('Restaurants', 'description',
               existing_type=sa.VARCHAR(length=250),
               type_=sa.String(length=150),
               existing_nullable=False)
    op.alter_column('Restaurants', 'menu',
               existing_type=sa.VARCHAR(length=400),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('Restaurants', 'feedback',
               existing_type=sa.VARCHAR(length=250),
               type_=sa.String(length=120),
               existing_nullable=False)
    op.add_column('users', sa.Column('comments', sa.JSON(), nullable=True, server_default='[]'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'comments')
    op.alter_column('Restaurants', 'feedback',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=250),
               existing_nullable=False)
    op.alter_column('Restaurants', 'menu',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=400),
               existing_nullable=False)
    op.alter_column('Restaurants', 'description',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=250),
               existing_nullable=False)
    op.alter_column('Restaurants', 'name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.create_table('Feedbacks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('restaurant_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['Restaurants.id'], name='Feedbacks_restaurant_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='Feedbacks_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Feedbacks_pkey')
    )
    # ### end Alembic commands ###
